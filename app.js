// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK Mini App
VK.init(function() {
    console.log("VK Mini App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
});

// –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (localStorage)
let totalCalories = localStorage.getItem('totalCalories') || 0;
updateTotal();

function addProduct() {
    const product = document.getElementById('product').value;
    const calories = parseFloat(document.getElementById('calories').value);
    const weight = parseFloat(document.getElementById('weight').value);

    if (!product || !calories || !weight) {
        alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
        return;
    }

    // –†–∞—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π
    const total = (calories * weight) / 100;
    totalCalories = parseFloat(totalCalories) + total;

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
    localStorage.setItem('totalCalories', totalCalories);

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    updateTotal();
    addToLog(`üç¥ ${product}: ${total.toFixed(2)} –∫–∫–∞–ª`);
}

function updateTotal() {
    document.getElementById('total').textContent = totalCalories.toFixed(2);
}

function addToLog(text) {
    const log = document.getElementById('log');
    log.innerHTML = `<div>${text}</div>` + log.innerHTML;
}